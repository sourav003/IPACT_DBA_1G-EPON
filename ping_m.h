//
// Generated file, do not edit! Created by opp_msgtool 6.0 from ping.msg.
//

#ifndef __PING_M_H
#define __PING_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class ping;
/**
 * Class generated from <tt>ping.msg:17</tt> by opp_msgtool.
 * <pre>
 * message ping
 * {
 *     int ONU_id;
 * }
 * </pre>
 */
class ping : public ::omnetpp::cMessage
{
  protected:
    int ONU_id = 0;

  private:
    void copy(const ping& other);

  protected:
    bool operator==(const ping&) = delete;

  public:
    ping(const char *name=nullptr, short kind=0);
    ping(const ping& other);
    virtual ~ping();
    ping& operator=(const ping& other);
    virtual ping *dup() const override {return new ping(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getONU_id() const;
    virtual void setONU_id(int ONU_id);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ping& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ping& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline ping *fromAnyPtr(any_ptr ptr) { return check_and_cast<ping*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PING_M_H

